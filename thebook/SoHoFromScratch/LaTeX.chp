=====
LaTeX
=====


LaTeX is an immensely powerful typesetting package. It is not a word processor, and is in many ways superior to any word processing package, except for one thing. It is hard to get started.  Really hard. 

So, firstly a list of reasons why to use LaTeX.


- LaTeX is used by some of the cleverest people I know, and some of the cleverest people on the planet.  It is to all intents and purposes the language scientists learn to write their doctoral thesis, and publish their papers in journals.

- If LaTeX had been around in 1905, Einstein would have used it to typeset his theories on relativity, nature of light and the size of atoms. Of course he would have had to take six months to learn it and then get that last annoying tweak out and a revolution in science would have had to wait another year, but *he still would have used LaTeX*. [#]_

- It is based on TeX, which was written by Prof. Donald Knuth 30 years ago, and it is still going strong.  

- TeX has a version numbering system that is tending to pi - in other words we are at version 3.14152.  If that is not cool I do not know what is.

- It is pronounced Lay-Tech.


and some more serious reasons


- You can write a text file, and get out HTML, and pdf. 

- The output looks better.  It just does.  And you can make it even better.  You.



I use ReST, which is a "lite" markup language.  This whole site was written in it. ::


  
  This is a Title in ReST
  =======================
  This is just a paragraph, and below is a bullet list

  - with bullet points
  - laid out easily 
  - in any text editor.

  and you can even include images like this one
   
  .. img: myPhoto.jpg


ReST is exceptionally flexible, and you can produce HTML at the drop of a hat::

  $ rst2html.py --stylesheet=style.css test.txt > test.html

And of course it can do the same with LaTeX::

  $ rst2latex.py test.txt > test.ltx

Which you can then convert into a pdf::

  $ pdflatex test.ltx


And hey presto ! HTML and PDFs from just text documents. Perfect for knocking up documentation, business reports and the like.


Corporate Style
===============

Which is of course exactly what I use this stuff for.  Mostly producing business reports and other "corporate" documents.
It means I can concentrate on the words, and not have to fuss around with making it look nice.  

It feels deeply effective to be able to write just some plain vanilla text, hit a command and view a professional looking, impressive document that can be mailed to whoever needs it.  Quotes, proposals, tenders, political in-fighting.  All of which I can concentrate on the *content* of the document, and then let ReST and LaTeX make me look good.


Of course one can use MS Word (or any word processor) effectively and well,[#]_  but I have found this a indispensible tool.  Often I can find myself where Word is impractical (say on the tube with just a PDA) and just write an email to myself, in plain text, confident that when i am in front of a real computer, it will be a matter of minutes to turn it into a professional document.  

Now stylesheets are what we are talking about.  HTML has CSS for its style 
  











I am going to discuss two ways to make that getting started easier

- how to build your own LaTeX class to style reports as you would like them
- how to generate LaTeX documents (and pdfs) straight from text files.

Classes
-------
LaTeX looks like this

::

  \documentclass{article}
  \begin{document}
  Hello World
  \end{document}

Then discuss packages, classes, making pdfs etc.


Getting hold of LaTeX
---------------------


Writing Own class
-----------------
There are two types of file that contain user-defined style information - classes (*.cls) and packages (*.sty).
A package can be included with any kind of class (article, book) and it will work sensibly. It usually includes things like author information.
A class is much harder to work with other classes - a book class will work badly if it tries to coexist with a newsletter class. 

We want a business-report class, that we shall use to define how all the memos and reports we send out to the business shall look. 
It will try and mimic a Word document as corporate style usually gets defined like that.

 


Notes
-----
difference between class and pacakge

classes are in .cls files, and only do one *type* of document (ie newsletter)
packages are in .sty files and have functions that can affect any *type* of document, such as graphics package.

There is a report class defined in /usr/local/texlive/2008/texmf-dist/tex/latex/base, and as I am trying to create my own class that will be used for my internal reports, that is where we start







http://www.how2s.org/index.php/Howto_use_Arial_Font_in_LaTeX


starting
http://www.ling.upenn.edu/advice/latex.html
http://www.ccrnp.ncifcrf.gov/~toms/latexforbeginners.html
http://heather.cs.ucdavis.edu/~matloff/LaTeX/LookHereFirst.html

texlive

http://www.tex.ac.uk/cgi-bin/texfaq2html?label=dvips-pdf
http://www-h.eng.cam.ac.uk/help/tpl/textprocessing/
http://online.redwoods.cc.ca.us/instruct/darnold/StaffDev/Index.htm
http://www.ling.upenn.edu/advice/latex.html
understanding fonts

http://www.cl.cam.ac.uk/~mgk25/unicode.html



.. [#] Einstein handed in his ph.D. disseration (on viscosity of liquids) and was told by the thesis committee it was too short.  So he added one line.  If he had used LaTeX he could have had the whole thing re-typeset in seconds.  

.. [#]  MS Word can of course be used to do this.  But why? for long works it really starts to grow a pain, and it is only feasible to handle Word if you use "styles" - that is instead of marking "my Heading" as Bold and Underline, you mark it as Style header2, which you can apply

