=================
Topless computing
=================

Not nearly as much fun as it sounds
===================================

The other day I was asked by a member of staff if it would be possible to tie the holiday spreadsheet into the master workplanner application.

Now *possible* is a horrible word for IT people, because it is *always* possible.  Its really a question of is it a good idea.  

I said, well, not until the holiday recording was taken out of spreadsheet form and put into something that was less ... topless.

Yes, I got the eyebrow reaction.

However it does make sense.  We do not know what the future is going to hold, so it is always sensible to put our data and code into a form that makes it easy / simple / feasible to build another system on top of it. 

In other words we should build our systems to be **top-less**.

Of course, like in the real world, there are varying degrees of topless.  A spreadsheet is possible to extract data from, I would be tempted to build a pylons app that held open a COM connection to a hourly updated copy of the sheet, and replied to requests with JSON or text.  But then I would need to map the employeeIDs around the place, and write some interpreter for the weird way the spreadsheet deals with time, and it would probably be a good idea to cache the dates for speed, which means a storage engine, and by this time I have written yet another half-assed application, that still does not handle half-days sick, nor talk to the payroll, nor know anything about regulations.  

But to get rid of it will mean *me* going off finding a list of decent payroll applications, and asking if they are topless.  

Which always makes for a fun phone call.


So yes, topless means simple to integrate.  Topless means does not unnecessarily prevent programmatic access in an attempt to be *user-friendly*.

But mostly topless is an innuendo.

Which is why I say it.  People remember. 



